import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import linregress

H=20
pix=480*10**-9
        
def Analysis(pos):
    DR=np.zeros((H,len(pos)))
    error=np.zeros(H)
    for h in range(1,H+1):
        for i in range(0,len(pos)):
            if (i+h)>=len(pos):
                DR[h-1][i]=0
                
            else:
                DR[h-1][i]=abs(pos[i+h]-pos[i])**2/(len(pos)-h)
    return DR

def radmaker(xpos,ypos,zpos):
    rad=np.zeros(len(xpos))
    for i in range(len(xpos)):
        rad[i]=np.sqrt(xpos[i]**2+ypos[i]**2+zpos[i]**2)
        
    return rad
        
def main():
    N=1
    
    yy=np.linspace(1,H,H)
    
    HH=np.zeros(H)
    
    xpos=[14.61,13.23,13.65,13.65,14.39,14.43,12.7,13.31,12.36,13.22,13.21,13.96,14.28,14.45,14.01,13.65,13.01,12.59,13.14,12.73,12.75,12.4,12.38,12.48,12.74,11.43,12.01,12.87,13.07,14.23,12.6,12.48,13.24,12.84,13.17,12.9,11.94,12.47,11.66,11.97,11.6,12.81,12.07,12.36,12.77,12.7,12.05,11.3,10.55,10.91,11.14,10.59,11.29,10.21,10.28,9.25,8.32,8.21,8.45,7.91,8.44,6.69,8.99,8.68,8.31,8.77,8.47,8.71,9.28,9.33,9.25,9.4,9.06,9.52,9.69,10.03,10.09,10.01,10.02,9.94]
    ypos=[20.86,22.69,22.22,21.44,21.56,22.38,23.3,22.67,22.52,22.17,22.22,22.61,22.76,22.46,23.38,23.31,22.9,23.17,23.5,23.07,23.19,22.87,23.38,23.09,23.1,23.29,24.21,22,22.96,22.08,21.79,21.9,21.25,22.21,21.3,21.62,21.25,21.39,21.33,21.47,21.58,20.88,21.06,20.6,21.04,20.6,20.63,21.2,21.29,21.31,21.62,21.68,21.62,22.36,22.23,22.7,21.72,22.34,21.63,22.61,22.49,22.43,21.66,21.62,21.16,21.03,21.26,21.18,21.05,21.04,21.01,21.67,22.04,21.62,21.08,21.13,21.57,21.51,21.56,22.08]
    zpos=[-6.073080741280727501e-01
,-7.357554787790692163e-01
,-7.540728036177331006e-01
,-8.251533233775869558e-01
,-9.497272058171998266e-01
,-1.008511159391226597e+00
,-1.154392273772071320e+00
,-9.442480519356190038e-01
,-9.510610990274691590e-01
,-1.263013608705923385e+00
,-1.186703998596928988e+00
,-1.298150538953672495e+00
,-1.191994055656784068e+00
,-1.191994055656784068e+00
,-1.191994055656784068e+00
,-1.191994055656784068e+00
,-1.164831503393206402e+00
,-1.164831503393206402e+00
,-1.118310142379518979e+00
,-1.077638064942546992e+00
,-1.172975175193189612e+00
,-1.172975175193189612e+00
,-1.125074075995801559e+00
,-1.125074075995801559e+00
,-1.072673480624759978e+00
,-1.063426712352427916e+00
,-9.470310574433341566e-01
,-9.403112005298307485e-01
,-5.975451366945628839e-01
,-6.130034451431521925e-01
,-6.627733542285549895e-01
,-6.898037574647660763e-01
,-7.768824082183485302e-01
,-7.664260033040264375e-01
,-9.109613392999598158e-01
,-1.047458295856402488e+00
,-1.182591680937397749e+00
,-1.155646625821343809e+00
,-1.155646625821343809e+00
,-1.240301370319272012e+00
,-1.121634601474886361e+00
,-1.121634601474886361e+00
,-1.099490019339665059e+00
,-1.099490019339665059e+00
,-1.099490019339665059e+00
,-1.099490019339665059e+00
,-1.043239356134282314e+00
,-1.029344118047936796e+00
,-1.079908544664494041e+00
,-1.184164168090494851e+00
,-1.136206068403371905e+00
,-1.136206068403371905e+00
,-1.293823813866640693e+00
,-1.199693257695516380e+00
,-1.121683364261679250e+00
,-1.044021333876687718e+00
,-1.175022579169161974e+00
,-1.192836895286313537e+00
,-1.139453679336071668e+00
,-1.139453679336071668e+00
,-1.014853306338628025e+00
,-1.304633278256851048e+00
,-1.371585240653277360e+00
,-1.592584241726210159e+00
,-1.568652743020035878e+00
,-1.568652743020035878e+00
,-1.568652743020035878e+00
,-1.560984315305130821e+00
,-1.682483271786038292e+00
,-1.323021176644855190e+00
,-1.323021176644855190e+00
,-1.342664124525175362e+00
,-1.320064673369480301e+00
,-1.171324875160208556e+00
,-1.158863176718365473e+00
,-1.123741694821684511e+00
,-1.099802584955748230e+00
,-1.180232980298219658e+00
,-1.180232980298219658e+00
,-1.165568982510591267e+00
,-1.149966932740205339e+00
,-1.205393068801789758e+00
,-1.186664350969702575e+00
,-1.162811978273146973e+00
,-1.191032962338497647e+00
,-1.199330768543329651e+00
,-1.249694363900327065e+00
,-1.282111185980800983e+00
,-1.290767116294183614e+00
,-1.320094083180885391e+00
,-1.320094083180885391e+00
,-1.287539574471599169e+00
,-1.314352109980248429e+00
,-1.290713057033658240e+00
,-1.290713057033658240e+00
,-1.298196406412385429e+00
,-1.280196416324002051e+00
,-1.241341518063681981e+00
,-1.350242378295785750e+00
,-1.293825246986860078e+00
,-1.492292791636459448e+00
,-1.509125302134225022e+00
,-1.520538040114949307e+00
,-1.510614428159742006e+00
,-1.523889267586432172e+00
,-1.531534973989564064e+00
,-1.397827593409934899e+00
,-9.872631139897000141e-01
,-1.095347896626939654e+00
,-1.099956854691138242e+00
,-1.105973607824406013e+00
,-1.143445334021244042e+00
,-1.295946910672667096e+00
,-1.255538040867190785e+00
,-1.550645322623256384e+00
,-1.546949930092806458e+00
,-1.557376579489742952e+00
,-1.543593865623763994e+00
,-1.543593865623763994e+00
,-1.404315756020098727e+00
,-1.465391816310544160e+00
,-1.465391816310544160e+00
,-1.465391816310544160e+00
,-1.674886997236861852e+00
,-1.693897646047589634e+00
,-1.687548317150596944e+00
,-1.450367618813212633e+00
,-1.450367618813212633e+00
,-1.340658250213760727e+00
,-1.318644138302034863e+00
,-1.256253421423620953e+00
,-1.271081994052054132e+00
,-1.271081994052054132e+00
,-1.271081994052054132e+00
,-1.196422927584279261e+00
,-1.234063953746580733e+00
,-1.218211835386618702e+00
,-1.218211835386618702e+00
,-1.236641159140772439e+00
,-1.272238837162678049e+00
,-1.290362658024167386e+00
,-1.250121570618580202e+00
,-1.236245737166566938e+00
,-1.274811125134356571e+00
,-1.274811125134356571e+00
,-1.274811125134356571e+00
,-1.303573998165932224e+00
,-1.279305043174314482e+00
,-1.318326914797743887e+00
,-1.288312627927464149e+00
,-1.277441493949872608e+00
,-1.281749816459583080e+00
,-1.299549214924310858e+00
,-1.276459284000092342e+00
,-1.600073737508624250e+00
,-1.659524983452403957e+00
,-1.576500595873431054e+00
,-1.576500595873431054e+00
,-1.986994818754902248e+00
,-1.959619285350894913e+00
,-1.892777682072370515e+00
,-1.930302232767785009e+00
,-1.985262782423902417e+00
,-2.054405059688131363e+00
,-2.047179984415655518e+00
,-2.264765531212714844e+00
,-2.124395759995694188e+00
,-1.793197457240748971e+00
,-1.793197457240748971e+00
,-1.710855924219992552e+00
,-1.729686777564716449e+00
,-1.803297811688629126e+00
,-1.693814778416965483e+00
,-1.700684710862720550e+00
,-1.727118159959281973e+00
,-1.502477927779108935e+00
,-1.502477927779108935e+00
,-1.534274613003035581e+00
,-1.534274613003035581e+00
,-1.491033482681195288e+00
,-1.507993069794143270e+00
,-1.507993069794143270e+00
,-1.507993069794143270e+00
,-1.506563585267907790e+00
,-1.767222301493641456e+00
,-1.742669965697951406e+00
,-1.721837714351282633e+00
,-1.862744730906206625e+00
,-1.433820056273346744e+00
,-1.508224195755480279e+00
,-1.434416485674714137e+00
,-1.526727380919939314e+00
,-1.462976076184887564e+00
,-1.811025334097290163e+00
,-2.562314608706288688e+00
,-2.562314608706288688e+00
,-2.592762804607160465e+00
,-2.397441900190718567e+00
,-2.455470727588486834e+00
,-2.385428296606283638e+00
,-2.352184594034628873e+00
,-2.319386381416183696e+00
,-2.749466685071802807e+00
,-2.771310444843988474e+00
,-2.704391061919345862e+00
,-2.665982626830476931e+00
,-2.808977467553851692e+00
,-2.789905186014202787e+00
,-2.813262139636026671e+00
,-2.664622689751670492e+00
,-2.076407763989732924e+00
,-2.107375513997935101e+00
,-2.160099570722256335e+00
,-2.021785625289082233e+00
,-2.021785625289082233e+00
,-2.079289259169069037e+00
,-1.874500970744034101e+00
,-1.934657669364794552e+00
,-1.579031777590945040e+00
,-1.370800993367283560e+00
,-1.329609730545509683e+00
,-1.372023954150914271e+00
,-1.392115342611164985e+00
,-1.459121526095706223e+00
,-1.342175576951927685e+00
,-1.273390540649722347e+00
,-1.242209168345518089e+00
,-1.245462355497304330e+00
,-1.245462355497304330e+00
,-1.489151485551629461e+00
,-1.345748197304979188e+00
,-1.373421094490412830e+00
,-1.347867219880160228e+00
,-1.718280154279434369e+00
,-2.006727745732804102e+00
,-2.006727745732804102e+00
,-2.394780621282059485e+00
,-2.291597231856136840e+00
,-2.415691994775539531e+00
,-2.168964807568519060e+00
,-2.123217843680754946e+00
,-2.155832241607343214e+00
,-2.118056378300408937e+00
,-2.118056378300408937e+00
,-1.999979476935491496e+00
,-1.958289853184610241e+00
,-1.958289853184610241e+00
,-1.996795757227589618e+00
,-1.953407201128502635e+00
,-1.898862276702301566e+00
]
    
    #pos=radmaker(xpos,ypos,zpos)
    pos=zpos
    
    Rad=Analysis(pos)
    for h in range(0,H):
        HH[h]=sum(Rad[h])
    #print(HH,Rad)
    
    m,b=np.polyfit(yy,HH,1)
    
    XL=np.linspace(0,len(zpos),len(zpos))
    
    M=0.318 
    
    plt.plot(yy,HH)
    plt.plot(yy,((m*yy)+b))
    #plt.plot(yy,(M*yy)+b)
    #plt.plot(XL,zpos)
    plt.xlabel("Î”Frames")
    plt.ylabel("Mean Squared Displacement between frames")
    plt.title("x Vector")
    plt.legend(['Experimental MSD','Experimental Fit','Expected'])
    print(m)
    
main()